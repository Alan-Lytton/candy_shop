import React from 'react'
import '../css/AboutUs.css'

import JangPic from '../assets/images/Jangimage.PNG';
const AboutUs = () => {
    return (
        <div>
            <div class="about wf-section">
                <div class="my-container">
                    <h1>
                        <span class="white-text">meet the </span>
                        <span class="light-green-text">team</span>
                    </h1>
                    <div class="w-layout-grid about-grid-nikolai">
                        <div class="about-card">
                            <h1 class="h1-left">jang singh</h1>
                            <div class="_1rem-divider"></div>
                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae omnis aliquid ea voluptates suscipit sint odit quia, magni ducimus atque sit esse adipisci eos mollitia libero distinctio officia labore porro?</p>
                            <img src="" loading="lazy" srcset="" class="image-15--mobile" />  {/* Mobile view picture link*/}
                        </div>
                        <div id="about_me_pic" class="about-pfp">
                            <img loading="lazy" require src="" class=" jang-pic" /> {/* Desktop view picture link*/}
                        </div>
                    </div>
                    <div class="w-layout-grid about-grid-jason">
                        <div class="about-pfp">
                            <img loading="lazy" srcset="" class="about-pic" />{/* Desktop view picture link*/}
                        </div>
                        <div class="about-card">
                            <h1 class="h1-left">chris meehan</h1>
                            <div class="_1rem-divider"></div>
                            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Vitae minima iste obcaecati facilis labore! Quisquam odio pariatur vel, porro sunt rem sed, eligendi perspiciatis adipisci fugit consequuntur eaque in ullam.</p>
                            <img  loading="lazy"  class="image-14-mobile" /> {/* Mobile view picture link*/}
                        </div>
                    </div>

                    <div class="w-layout-grid about-grid-nikolai">
                        <div class="about-card">
                            <h1 class="h1-left">alan</h1>
                            <div class="_1rem-divider"></div>
                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae omnis aliquid ea voluptates suscipit sint odit quia, magni ducimus atque sit esse adipisci eos mollitia libero distinctio officia labore porro? lorem*1</p>
                            <img loading="lazy" class="image-15--mobile" />  {/* Mobile view picture link*/}
                        </div>
                        <div id="about_me_pic" class="about-pfp">
                            <img loading="lazy"  class=" jang-pic" /> {/* Desktop view picture link*/}
                        </div>
                    </div>

                    <div class="w-layout-grid about-grid-jason">
                        <div class="about-pfp">
                            <img loading="lazy" class="about-pic" />{/* Desktop view picture link*/}
                        </div>
                        <div class="about-card">
                            <h1 class="h1-left">chris B</h1>
                            <div class="_1rem-divider"></div>
                            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Vitae minima iste obcaecati facilis labore! Quisquam odio pariatur vel, porro sunt rem sed, eligendi perspiciatis adipisci fugit consequuntur eaque in ullam.</p>
                            <img loading="lazy" class="image-14-mobile" /> {/* Mobile view picture link*/}
                        </div>
                    </div>

                    <div class="w-layout-grid about-grid-nikolai">
                    <div class="about-card">
                        <h1 class="h1-left">Pablo</h1>
                        <div class="_1rem-divider"></div>
                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae omnis aliquid ea voluptates suscipit sint odit quia, magni ducimus atque sit esse adipisci eos mollitia libero distinctio officia labore porro?</p>
                        <img loading="lazy" class="image-15--mobile" />  {/* Mobile view picture link*/}
                    </div>
                    <div id="about_me_pic" class="about-pfp">
                        <img loading="lazy"  class=" jang-pic" /> {/* Desktop view picture link*/}
                    </div>
                </div>
                </div>
            </div>
        </div>
    )
}

export default AboutUs




@media screen and (max-width: 991px) {
    .w-col-medium-12 {
      width: 100%;
    }
  
  }
  
  @media screen and (max-width: 767px) {
    .w-col-small-12 {
      width: 100%;
    }
  }
  
  @media screen and (max-width: 479px) {
  
    .w-col-tiny-12 {
      width: 100%;
    }
  }
  
  
  .w-layout-grid {
    grid-row-gap: 16px;
    grid-column-gap: 16px;
    grid-template-rows: auto auto;
    grid-template-columns: 1fr 1fr;
    grid-auto-columns: 1fr;
    display: grid;
  }
  
  body {
    color: #000;
    background-color: #f2e8cf;
    font-family: Cabinetgrotesk, sans-serif;
    font-size: 1.25rem;
    font-weight: 500;
    line-height: 150%;
  }
  
  h1 {
    z-index: 10;
    color: #43a363;
    text-align: center;
    text-transform: uppercase;
    margin-top: 0;
    margin-bottom: 0;
    font-family: Milligram, sans-serif;
    font-size: 4rem;
    font-weight: 700;
    line-height: 100%;
    position: relative;
  }
  
  
  
  
  .my-container {
    z-index: 20;
    max-width: 1280px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 2rem;
    padding-right: 2rem;
    position: relative;
  }
  
  .light-green-text {
    color: #a5dd73;
  }
  
  .white-text {
    color: #fff;
  }
  
  
  
  .about {
    background-color: #43a363;
    background-image: none;
    border-top: 2px solid #000;
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
  
  .about-grid-nikolai {
    z-index: 10;
    grid-template-rows: auto;
    grid-template-columns: 1.25fr 1fr;
    align-items: center;
    margin-top: 3rem;
    position: relative;
  }
  
  .about-card {
    background-color: #f2e8cf;
    border: 2px solid #000;
    border-radius: 1rem;
    flex-direction: column;
    align-items: flex-start;
    padding: 2rem;
    display: flex;
    box-shadow: 4px 4px #000;
  }
  
  .h1-left {
    text-align: left;
    font-size: 3rem;
  }
  
  .about-grid-jason {
    z-index: 10;
    grid-template-rows: auto;
    grid-template-columns: .75fr 1fr;
    align-items: center;
    margin-top: 6rem;
    position: relative;
  }
  
  .jang-pic{
    width: 400px;
  }
  
  ._2rem-divider-width {
    width: 2rem;
  }
  
  .image-11 {
    opacity: .2;
    display: none;
    position: absolute;
    top: 130px;
    bottom: auto;
    left: 0%;
    right: auto;
  }
  
  .image-12 {
    opacity: .2;
    display: none;
    position: absolute;
    top: auto;
    bottom: 0%;
    left: auto;
    right: 400px;
  }
  
  
  .image-14-mobile {
    display: none;
    transform: rotate(2deg);
  }
  
  .html-embed {
    width: 100%;
    height: 100%;
    border-radius: 20px;
  }
  
  .image-17 {
    position: absolute;
    top: 3rem;
    bottom: auto;
    left: auto;
    right: 0%;
  }
  
  
  
  
  .grid-3 {
    z-index: 10;
    grid-column-gap: 2rem;
    grid-row-gap: 2rem;
    grid-template-rows: auto;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    margin-top: 1rem;
    margin-left: auto;
    margin-right: auto;
    position: relative;
  }
  
  .image-15--mobile {
    display: none;
    transform: rotate(-2deg);
  }
  
  .about-pic {
    width: 380px;
    height: 380px;
  }
  .about-pfp {
    position: relative;
  }
  @media screen and (max-width: 991px) {
    h1 {
      font-size: 2rem;
    }
  
    h2 {
      font-size: 2.5rem;
    }
  
    p {
      font-size: 1.125rem;
    }
  
    .about-grid-nikolai {
      grid-template-rows: auto auto;
      grid-template-columns: 1fr;
    }
  
    .h1-left {
      font-size: 3rem;
    }
  
    .about-grid-jason {
      grid-template-rows: auto auto;
      grid-template-columns: 1fr;
    }
  
  
  
  }
  
  @media screen and (max-width: 767px) {
  
  
    .about-card {
      flex-direction: column;
      align-items: center;
      padding-top: 8rem;
      display: flex;
      position: relative;
    }
  
  
  
    .image-14-mobile {
      width: 200px;
      margin-left: auto;
      margin-right: auto;
      display: block;
      position: absolute;
      top: -60px;
      bottom: auto;
      left: 0%;
      right: 0%;
    }
  
  
    .image-15--mobile {
      width: 200px;
      margin-left: auto;
      margin-right: auto;
      display: block;
      position: absolute;
      top: -75px;
      bottom: auto;
      left: 0%;
      right: 0%;
    }
    .about-pfp {
      display: none;
    }
    .badge-image {
      max-width: 80%;
    }
  }
  
  @media screen and (max-width: 479px) {
  
    .about {
      padding-top: 3rem;
      padding-bottom: 3rem;
    }
  
    .about-grid-nikolai {
      grid-template-rows: auto;
      margin-top: 6rem;
    }
  
    .about-card {
      padding-top: 10rem;
      padding-left: .5rem;
      padding-right: .5rem;
      box-shadow: 4px 4px #000;
    }
  
    .h1-left {
      text-align: center;
      font-size: 2.25rem;
    }
  
    .about-grid-jason {
      grid-template-rows: auto;
    }
  }
  
  #about_me_pic {
    grid-area: span 1 / span 1 / span 1 / span 1;
    align-self: center;
    justify-self: end;
  }
  
  @media screen and (max-width: 991px) {
  
    #w-node-_783bc760-ae1f-87dd-9921-637d378bf0e2-61e34ed2,
    #w-node-a0d145a0-1bb7-27ca-81a1-ab212b167f6f-61e34ed2,
    #w-node-_90c4a924-a375-d430-9622-ccb1c15cf32d-61e34ed2 {
      justify-self: center;
    }
  
  }
  
  @font-face {
    font-family: 'Milligram';
    src: url('https://uploads-ssl.webflow.com/643c1db56d1a08a9e1e34ed7/643c1db56d1a087dd9e34eee_Milligram-Bold.ttf') format('truetype');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Cabinetgrotesk';
    src: url('https://uploads-ssl.webflow.com/643c1db56d1a08a9e1e34ed7/643c1db56d1a08ef56e34f06_CabinetGrotesk-Bold.ttf') format('truetype');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
  }
  
  @font-face {
    font-family: 'Cabinetgrotesk';
    src: url('https://uploads-ssl.webflow.com/643c1db56d1a08a9e1e34ed7/643c1db56d1a08e9f3e34eed_CabinetGrotesk-Medium.ttf') format('truetype');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
  }





  style.moduels.css // look into it











{_id: '6441533e2ed4bdfc2dba3281', candyName: 'Skittles Original', candyPrice: 1.89, candyDescription: 'Every pack of SKITTLES Original Fruity Candy gives…strawberry, green apple, grape, lemon and orange.', candyImage: 'https://www.skittles.com/cdn-cgi/image/width=600,h…es/migrate-product-files/bam8afcev37jvz2mfpnk.png', …},
{_id: '644161fcda0e742d53db8579', candyName: 'Kit-Kat', candyPrice: 1.79, candyDescription: "We're all about those breaks. And the best breaks …of crispy wafers coated in smooth milk chocolate.", candyImage: 'https://s7d2.scene7.com/is/image/hersheysassets/0_…7_701_24600_070_Item_Front?fmt=png-alpha&hei=2250', …},
{_id: '644161fcda0e742d53db8579', candyName: 'Kit-Kat', candyPrice: 1.79, candyDescription: "We're all about those breaks. And the best breaks …of crispy wafers coated in smooth milk chocolate.", candyImage: 'https://s7d2.scene7.com/is/image/hersheysassets/0_…7_701_24600_070_Item_Front?fmt=png-alpha&hei=2250', …},
{_id: '644161fcda0e742d53db8579', candyName: 'Kit-Kat', candyPrice: 1.79, candyDescription: "We're all about those breaks. And the best breaks …of crispy wafers coated in smooth milk chocolate.", candyImage: 'https://s7d2.scene7.com/is/image/hersheysassets/0_…7_701_24600_070_Item_Front?fmt=png-alpha&hei=2250', …},
{_id: '644161fcda0e742d53db8579', candyName: 'Kit-Kat', candyPrice: 1.79, candyDescription: "We're all about those breaks. And the best breaks …of crispy wafers coated in smooth milk chocolate.", candyImage: 'https://s7d2.scene7.com/is/image/hersheysassets/0_…7_701_24600_070_Item_Front?fmt=png-alpha&hei=2250', …},
{_id: '644161fcda0e742d53db8579', candyName: 'Kit-Kat', candyPrice: 1.79, candyDescription: "We're all about those breaks. And the best breaks …of crispy wafers coated in smooth milk chocolate.", candyImage: 'https://s7d2.scene7.com/is/image/hersheysassets/0_…7_701_24600_070_Item_Front?fmt=png-alpha&hei=2250', …}











import React, {useState, useEffect, useContext} from 'react';
import axios from "axios";
import { useNavigate, Link } from 'react-router-dom';
import Select from 'react-select';
import Navbar from './Navbar';
import Footer from './Footer';
import '../css/allCandies.css';
import {CartContext} from "../contexts/CartContext";

const AllCandies = (props) => {

  const navigate = useNavigate();
  const [candies, setCandies] = useState([]);
  const [categories, setCategories] = useState([]);
  const {addedMessage, addToCart} = useContext(CartContext);


  const options = categories.map((category) => ({
    value: category._id,
    label: category.categoryName,
  }));

  useEffect(() => {
    axios.get("http://localhost:8000/api/candy")
      .then(res => setCandies(res.data.allCandy))
      .catch(err => console.log(err));
  }, []);

  useEffect(() => {
    axios.get("http://localhost:8000/api/category")
      .then(res => setCategories(res.data.categories))
      .catch(err => console.log(err));
  }, []);

  const handleCategoryChange = (selectedCategory) => {
    if (selectedCategory) {
      navigate(`/filtered/candy/${selectedCategory.value}`);
    }
  };

  return (
    <section className='all_candies_container'>
      <Navbar />
      <div className="all__candies__h1andfilter">
        <h1 className='main__title__allCandies'>Find your favorite candies </h1>
        <div className="select-container">
          <Select
            options={options}
            placeholder="Categories"
            className="selecttagall"
            onChange={handleCategoryChange}
          />
        </div>
      </div>
      <section className="cadies_container">
        {candies.map((candy, i) => (
          <div key={candy._id} className="each_candy">
            <Link to={`/one/candy/${candy._id}`}>
              <img className='candy__image' src={candy.candyImage} alt="Placeholder" />
            </Link>
            <div className="each_candy_text">
              <h6 className='candy__title'> <Link to={`/one/candy/${candy._id}`}>{candy.candyName}</Link></h6>
              <h6 className='candy__price'>${candy.candyPrice}</h6>
              <button className='each__candy__addToCart' onClick={() => addToCart(candy)} >Add to Cart!</button>
    <p className={`added-message${addedMessage[candy._id] ? ' show' : ''}`}>Added</p>
            </div>
          </div>
        ))}
      </section>
      <Footer/>
    </section>
  )
}

export default AllCandies;




///////////
import React, {createContext, useEffect, useState} from 'react';

const CartContext = createContext();

const CartProvider = ({ children }) => {
  const [cartCount, setCartCount] = useState(()=>{
    const cartCountFromStorage = localStorage.getItem('cartCount');
    return cartCountFromStorage ? JSON.parse(cartCountFromStorage) : 0;
  });
  const [cartItems, setCartItems] = useState(() => {
    const cartItemsFromStorage = localStorage.getItem('cartItems');
    return cartItemsFromStorage ? JSON.parse(cartItemsFromStorage) : [];
  });
  const[addedMessage,setAddedMessage] = useState({})

  useEffect(() => {
    const cartItemsFromStorage = localStorage.getItem('cartItems');
    const cartCountFromStorage = localStorage.getItem('cartCount');
    if (cartItemsFromStorage){
      setCartItems(JSON.parse(cartItemsFromStorage));
      setCartCount(JSON.parse(cartCountFromStorage));
    }
  }, []);

  useEffect(() => {
    localStorage.setItem('cartItems', JSON.stringify(cartItems));
    localStorage.setItem('cartCount', JSON.stringify(cartCount));
  }, [cartItems]);

  const addToCart = (candy) => {
    setCartItems((prevCartItems) => {
      const existingCartItem = prevCartItems.find((item) => item._id === candy._id);
      if (existingCartItem) {
        return prevCartItems.map((item) =>
            item._id === candy._id
                ? {
                  ...item,
                  quantity: item.quantity + 1,
                  totalCost: (item.quantity + 1) * item.candyPrice,
                }
                : item
        );
      } else {
        return [
          ...prevCartItems,
          {
            ...candy,
            quantity: 1,
            totalCost: candy.candyPrice,
          },
        ];
      }
    });
    setCartCount(cartCount+1);
    setAddedMessage({ ...addedMessage, [candy._id]: true });
    setTimeout(() => {
      setAddedMessage({ ...addedMessage, [candy._id]: false });
    }, 1000);
  };

  const clearCart = () => {
    setCartCount(0);
    setCartItems([]);
  };

  const removeFromCart = (itemId, quantity) => {
    const updatedCartItems = cartItems.filter((item) => item._id != itemId);
    setCartCount(cartCount - quantity);
    setCartItems(updatedCartItems);

  };

  return (
    <CartContext.Provider value={{ cartCount, setCartCount, cartItems, setCartItems, addToCart, removeFromCart, clearCart, addedMessage, setAddedMessage}}>
      {children}
    </CartContext.Provider>
  );
};

export { CartContext, CartProvider };






////////////import { PayPalScriptProvider, PayPalButtons } from "@paypal/react-paypal-js";
import { CartContext } from '../contexts/CartContext';
import React, { useContext } from 'react';
import { Link } from 'react-router-dom';
import Navbar from './Navbar';
import '../css/cart.css';
import Footer from '../components/Footer.jsx'
import EmptyCart from '../assets/images/emptyCart.png';

const PAYPAL_API = process.env.REACT_APP_PAYPAL_API;
console.log("THIS IS THE API KEY ", PAYPAL_API)
const Cart = () => {
  const { cartItems, removeFromCart, clearCart } = useContext(CartContext);

  console.log(cartItems)

  // const [emtyCart, setEmptyCart] = useState([])

  console.log("This is the cart item ", cartItems)

  const getSubTotal = () => {
    let subTotal = 0
    for (let i = 0; i < cartItems.length; i++) {
      subTotal += cartItems[i].totalCost;
    }
    return subTotal
  };


  return (
    <div>
      <Navbar />
      <form className='main_form_cart'>
        <div className="cart_items_card">
          {cartItems.map((candy) => (
            <div key={candy._id} className="each_candy__cart">
              <div className="each_candy_text__cart">
                <h6 className="candy__title__cart">
                  <Link to={`/one/candy/${candy._id}`}>{candy.candyName}</Link>
                </h6>
                <h6 className="candy__price__cart">Individual Total: ${candy.totalCost.toFixed(2)}</h6>
                <input  className='number_input' type="number" value={candy.quantity} placeholder='Quantity' min={0} />

                <button className="deleteFuncitonality" onClick={() => removeFromCart(candy._id, candy.quantity)} ><i class="fa-solid fa-trash-can trashcan"></i></button>
              </div>
              <Link to={`/one/candy/${candy._id}`}>
                <img
                  className="candy__image__cart"
                  src={candy.candyImage}
                  alt="Placeholder"
                />
              </Link>
            </div>
          ))}
        </div>
        { cartItems.length != 0 ?
        <div className="checkout_main_section_cart">
          <h3 className='cart_summary_title'>Cart Summary</h3>
          <div className="scrollable_div">
            {cartItems.map((aCandy) => (
              <div key={aCandy._id} className='mapped_checkout_cart'>
                <h4 className='candy_mapped_chcekout'>{aCandy.candyName}</h4>
                <div className="seperator">
                  <h4 className='candy_mapped_chcekout'>${aCandy.totalCost.toFixed(1)}</h4>
                  <h4 className='candy_mapped_chcekout'>{aCandy.quantity}</h4>
                </div>
              </div>
            ))}
          </div>
          <div className="sub_total__container">
            <h4 className='checkout_subtotal'> Subtotal</h4>
            <h4 className='checkout_subtotal'>${getSubTotal().toFixed(2)}</h4>
          </div>

          <div className="paypal_container">

            <PayPalScriptProvider className="PayaplSection"
              options={{ "client-id": PAYPAL_API }} >
              <PayPalButtons 
                createOrder={(data, actions) => {
                  return actions.order.create({
                    purchase_units: [
                      {
                        amount: {
                          value: getSubTotal().toFixed(2),
                        },
                      },
                    ],
                  });
                }}
                onApprove={async (data, actions) => {
                  const details = await actions.order.capture();
                  const name = details.payer.name;
                  const amount = details.purchase_units[0].amount;
                  const address = details.purchase_units[0].shipping.address;
                  const order_id = details.id;
                  clearCart();

                  console.log(details)
                  alert("🍬🍭Payment successful!🍫🍡" + "\r" +
                    "Transaction completed by " + name.given_name + " " + name.surname + " for $" + amount.value + " " + amount.currency_code + "\r" +
                    "Order " + order_id + " will be shipped to: " + address.address_line_1 + ", " + address.admin_area_2 + ", " + address.admin_area_1 + ", " + address.postal_code + " " + address.country_code);
                }}
              />
            </PayPalScriptProvider>
          </div>
        </div>
            : 
            <div className="empty_container">
            <div className="wrapping_empty_cart">
            <img className="EmptyImage" src={EmptyCart} alt="" />
            </div>
            <span className="cart_empty_span"></span>
            </div>
          
          
          }
      </form>
      <Footer />
    </div>
  );
};

export default Cart;





///////////


Image
https://live.staticflickr.com/65535/52838902573_3a038d4ff2_z.jpg
https://cdn.media.amplience.net/i/marsmmsprod/ct1044_img_01_1000110864_4010001438_4010001439?%24i%24=&w=1984
https://live.staticflickr.com/65535/52838230332_2ab3c7bacb_n.jpg

Name
Rolo Caramels
M&M's Peanut Butter Share Size
Life Savers Hard Candy 5 Flavors


Category
Caramel Candy
Candy Peices
Hard Candy

Price
1.49
4.99
4.25

Stock
20
30
20


Description
Savor rich chocolate ROLO® Creamy Caramels with smooth caramel centers, wrapped in classic gold foils. 
Get a movie box of these chocolate-covered caramels to share with the family, or take this kosher and gluten-free candy on the go.
The individually wrapped Life Savers inside are perfect for sharing, and you don't have to worry about trying to keep them from falling out of the roll or ending up covered in lint! Ditch the roll and reach for a bag of Life Savers candy today.









import { AboutUs, Cart, EditCandy, OneCandy, UserForm, UserLogin, AllCandies, CreateCandy, LandingPage, AdminLanding, Deals } from './components/index';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import PrivateRoute from './components/PrivateRoute'; // Import PrivateRoute

function App() {

  return (
    <div className="App">
      <BrowserRouter>
        <Routes>
          <Route path="/" element={<LandingPage />} />
          <Route path="/shop" element={<AllCandies />} />
          <Route path="/deals" element={<Deals />} />
          <Route path="/about/us" element={<AboutUs />} />
          <Route path="/admin/login" element={<UserLogin />} />
          <Route path="/one/candy/:id" element={<OneCandy />} />
          <Route path="/admin/register" element={<UserForm />} />
          <Route path="/admin" element={<PrivateRoute />}> {/* Wrap the protected routes in a parent route */}
            <Route index element={<AdminLanding />} />
            <Route path="dashboard" element={<AdminLanding />} />
            <Route path="candy/create" element={<CreateCandy />} />
            <Route path="candy/edit/:id" element={<EditCandy />} />
          </Route>
          <Route path="/candy/cart" element={<Cart />} />
        </Routes>
      </BrowserRouter>
    </div>

  );
}

export default App;
